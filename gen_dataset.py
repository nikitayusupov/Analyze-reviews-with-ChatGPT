import pandas as pd
from tqdm.notebook import tqdm
from openai import OpenAI
import pickle
import tiktoken
from random import choice, randint, shuffle
import json
import re

def remove_starting_dots_and_digits(s):
    return re.sub(r'^[\.\d]+', '', s).strip()

model_name = 'gpt-4o'
# Вставьте сюда ваш API ключ из OpenAI, получить его можно тут: https://platform.openai.com/api-keys
personal_openai_key = 'YOUR_OPENAI_API_KEY_HERE'

client = OpenAI(api_key=personal_openai_key)
# Описываем темы, на которые будем гененировать отзывы
topics = [
    'Жалоба на долгое время доставки.', 
    'Недовольство тем, что реальное время доставки не совпадает с обещанным.',
    'Жалуются, что часто привозят поврежденные продукты. Например, мороженое растаяло или ягоды помялись.', 
    'Ругаются, что курьер не может найти клиента.', 
    'Недовольство, что я описал курьеру подробно инструкцию, как меня найти, а он все равно звонит.', 
    'Не сработал промокод',
    'Благодарность за то, что все работает отлично и очень удобно.', 
    'Жалоба на приложение - постоянно либо зависает, либо вылетает, либо телефон греется, и тд.', 
    'Еда не такая вкусная, как в ресторане.',
    'Жалоба, что курьер не разговариает на моем языке.',
    'Недовольство ценами. Например, на рынке можно овощи купить дешевле, или в магазине у дома дешевле пельмени, и тд.', 
    'Долгое время приготовления заказа в ресторане. Напрмимер, не понимаю почему кофе нужно полчаса готовить.', 
    'Приезжает неполный заказ - забыли положить вилку и ложку, или забыли салфетки и тд.', 
    "Ругаются на то, что ресторан перепутал требования к заказу. Например, я просил безлактозное молоко, а добавили обычное. Или прожарка стейка не такая.", 
    'Я долго выбирал продукты, а в итоге магазин написал, что определенный продукт закончился и не сможет привезти - надо сразу делать продукт недоступным для выбора.',
]

results = [] 
iters_count = 100
for _ in range(100):
    topic = choice(topics)
    print()

    review_length = choice(['короткими', 'длинными, подробными, с деталями']) 
    review_count = randint(5, 60)
    total_cnt += review_count
    print(topic, ' - ', review_length, ' - ', review_count)
    gen_review = f'''
Твоя задача - сгенерировать правдоподобные и реалистичные отзывы от клиентов компании по доставке еды и продуктов из магазинов и ресторанов. 
Компания имеет свое мобильное приложение и является агрегатором разных ресторанов и магазинов. 
Пользователь выбирает либо блюда из определенного ресторана, либо продукты питания и товары для дома из магазина, добавляет в корзину, оплачивает, указывает адрес доставки, и курьер привозит заказ прямо домой. 
Компания провела опрос среди своих клиентов, попросив дать обратную связь о работе сервиса в свободной форме. Твоя задача - сгенерировать ответы из этой формы опроса. 
Все комментарии объединены общей темой - {topic} Твоя задача написать {review_count} примеров разных отзывов на эту тему. 
Отзывы должны быть {review_length}. Они должны быть написаны на естественном русском языке. Некоторые люди пишут неграмотно, с ошибками, опечатками, не ставят знаки препинания. 
Пиши креативно, можешь придумывать разные сценарии по заданной теме. Каждый отзыв на отдельной строке, не указывай имя автора отзыва. 
    '''
    # Делаем запрос в ChatGPT API:
    review_response = client.chat.completions.create(
        model=model_name,
        messages=[
            {"role": "user", "content": gen_review}
        ]
    )

    review_response_text = review_response.choices[0].message.content
    # Выводим результат для дебага
    print(review_response_text)

    # Складываем в массив все полученные результаты. Одна строка - один отзыв
    for el in review_response_text.split('\n'):
        if len(el.strip()) > 1:
            results.append({
                'topic': topic,
                'response': remove_starting_dots_and_digits(el.strip()),
                'review_length': review_length,
            })

# Сохраняем все сгенерированные отзывы в .csv файл
pd.DataFrame(results).to_csv('dataset.csv', index=False)
